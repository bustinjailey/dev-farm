# Dev Farm Reverse Proxy
# Provides path-based routing to development environments

events {
    worker_connections 1024;
}

http {
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Proxy settings for long-lived connections (VS Code Server)
    proxy_connect_timeout 600s;
    proxy_send_timeout 600s;
    proxy_read_timeout 600s;
    send_timeout 600s;

    # WebSocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Upstream for dashboard
    upstream dashboard {
        server devfarm-dashboard:5000;
    }

    server {
        listen 80;
        server_name _;

        # Increase body size for file uploads in VS Code
        client_max_body_size 500M;

        # Dashboard (root path)
        location / {
            proxy_pass http://dashboard;
            proxy_http_version 1.1;
            
            # WebSocket and SSE support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Critical for Server-Sent Events
            proxy_buffering off;
            proxy_cache off;
            chunked_transfer_encoding off;
        }

        # Development environments (path-based routing)
        # Matches: /env/my-project, /env/test-env, etc.
        location ~ ^/env/([a-zA-Z0-9_-]+)(/.*)?$ {
            set $env_name $1;
            set $env_path $2;

            # Resolve environment container dynamically
            # Container naming: devfarm-{env_name}
            resolver 127.0.0.11 valid=10s;
            set $backend "devfarm-$env_name:8080";
            
            # Ensure we always pass at least "/" to the backend
            if ($env_path = "") {
                set $env_path "/";
            }
            
            proxy_pass http://$backend$env_path$is_args$args;
            proxy_http_version 1.1;
            
            # WebSocket support (critical for VS Code Server)
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # VS Code Server specific
            proxy_set_header X-Forwarded-Host $host;
            
            # Disable buffering for real-time features
            proxy_buffering off;
            proxy_request_buffering off;
            
            # Handle 502/503/504 errors gracefully
            proxy_intercept_errors on;
            error_page 502 503 504 = @env_error;
        }

        # Friendly error page for environments that aren't running
        location @env_error {
            default_type text/html;
            return 503 '
<!DOCTYPE html>
<html>
<head>
    <title>Environment Not Ready</title>
    <style>
        body { font-family: -apple-system, sans-serif; text-align: center; padding: 50px; }
        .error { color: #d32f2f; font-size: 48px; }
        .message { color: #666; margin-top: 20px; }
    </style>
</head>
<body>
    <div class="error">⏳</div>
    <h1>Environment Not Ready</h1>
    <p class="message">This environment is starting up or not running.</p>
    <p class="message">Please check the dashboard and try again in a moment.</p>
    <p><a href="/">← Back to Dashboard</a></p>
</body>
</html>';
        }

        # Health check endpoint
        location /proxy-health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
    }
}
